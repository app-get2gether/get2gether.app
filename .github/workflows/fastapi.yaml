name: FastAPI

on:
  push:
    branches:
      - main
    paths-ignore:
      - packages/nextjs/**
      - packages/tact/**
  workflow_dispatch:

defaults:
  run:
    working-directory: packages/fastapi

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_DB: db_test
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5435:5432

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Lint
      run: |
        source .venv/bin/activate
        task lint
    - name: MyPy
      run: |
        source .venv/bin/activate
        task mypy
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        task test
        coverage json
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: packages/fastapi/coverage.json
        flags: fastapi
    - name: Notify on failure
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ vars.TELEGRAM_UPDATES_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ❌ FastAPI. Tests failed

          Commit message: ${{ github.event.commits[0].message }}
          https://github.com/${{ github.repository }}/actions/runs/${{github.run_id}}

  deploy:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - id: deploy
      name: Deploy to dokku
      uses: dokku/github-action@v1.1.3
      with:
          git_push_flags: '--force'
          git_remote_url: ${{ secrets.FASTAPI_DEPLOY_URL }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Notify on failure
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ vars.TELEGRAM_UPDATES_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ❌ FastAPI. Deploy failed

          Commit message: ${{ github.event.commits[0].message }}
          https://github.com/${{ github.repository }}/actions/runs/${{github.run_id}}
    - name: Notify on success
      if: ${{ success() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ vars.TELEGRAM_UPDATES_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ✅ FastAPI. Deploy succeed

          Commit message: ${{ github.event.commits[0].message }}
          https://github.com/${{ github.repository }}/actions/runs/${{github.run_id}}
