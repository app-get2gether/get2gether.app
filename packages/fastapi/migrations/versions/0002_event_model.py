"""event_model

Revision ID: 0002
Revises: 0001
Create Date: 2024-06-03 02:45:43.465247

"""
from typing import Sequence, Union

import geoalchemy2.types
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0002"
down_revision: Union[str, None] = "0001"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "events",
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(length=64), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("image_url", sa.String(length=128), nullable=False),
        sa.Column("address", sa.String(length=256), nullable=False),
        sa.Column("address_info", sa.Text(), nullable=False),
        sa.Column("lat", sa.Numeric(), nullable=True),
        sa.Column("lng", sa.Numeric(), nullable=True),
        sa.Column(
            "location",
            geoalchemy2.types.Geography(
                geometry_type="POINT",
                srid=4326,
                spatial_index=False,
                from_text="ST_GeogFromText",
                name="geography",
            ),
            nullable=True,
        ),
        sa.Column("members_count", sa.Integer(), nullable=False),
        sa.Column("reports_count", sa.Integer(), nullable=False),
        sa.Column("start_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("end_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.CheckConstraint(
            "NOT((lat is NULL) <> (lng is NULL))",
            name=op.f("ck_events_ch_events_not_xor_lat_lng"),
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["users.id"], name=op.f("fk_events_users_created_by")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_events")),
    )
    op.create_index("ix_events_created_by", "events", ["created_by"], unique=False)
    op.create_index("ix_events_end_at", "events", ["end_at"], unique=False)
    op.create_index(
        "ix_events_location",
        "events",
        ["location"],
        unique=False,
        postgresql_using="gist",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_events_location", table_name="events", postgresql_using="gist")
    op.drop_index("ix_events_end_at", table_name="events")
    op.drop_index("ix_events_created_by", table_name="events")
    op.drop_table("events")
    # ### end Alembic commands ###
